/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Installer Framework.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype QFileDialog
    \inqmlmodule scripting
    \brief Provides a dialog that allows users to select files or directories.

    Use the QFileDialog::getExistingDirectory() method to create a modal dialog
    that displays an existing directory selected by the user. Use the
    QFileDialog::getOpenFileName() method to create a dialog that displays
    matching files in the directory selected by the user.
    When a command line interface is used, a dialog is not displayed. Instead,
    the user can type the directory or the file name in the console. For
    automatic installations, \c{--file-query} with \c{identifier=value} pairs
    can be given separated with a comma. For example,
    \c{--file-query filedialog.id=C:/Temp,filedialog.id2=C:/Temp2}.
*/

/*!
    \qmlmethod string QFileDialog::getExistingDirectory(string caption, string dir)

    Returns an existing directory selected by the user.

    The dialog's working directory is set to \a dir, and the caption is set to
    \a caption. Either of these may be an empty string, in which case the
    current directory and a default caption will be used, respectively.
*/

/*!
    \qmlmethod string QFileDialog::getOpenFileName(string caption, string dir, string filter)

    Returns an existing file selected by the user. If the user selects
    \uicontrol Cancel, returns a null string.

    The file dialog's caption is set to \a caption. If \c caption is not
    specified, a default caption is used.

    The file dialog's working directory is set to \a dir. If \c dir includes a
    file name, the file will be selected. Only files that match the specified
    \a filter are shown. Either of these may be an empty string.

    To specify multiple filters, separate them with two semicolons (;;). For
    example:

    \code
    "Images (*.png *.xpm *.jpg);;Text files (*.txt);;XML files (*.xml)"
    \endcode

    On Windows, and macOS, this static function will use the native file dialog
    and not a QFileDialog.
*/
